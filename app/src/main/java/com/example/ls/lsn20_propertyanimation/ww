package com.example.ls.lsn20_propertyanimation;

import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import java.util.Random;

public class MainActivity extends AppCompatActivity {

    private int index;
    private Button button;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        button = findViewById(R.id.button);
       /* button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                *//*
                //位移动画
                Animation animation= AnimationUtils.loadAnimation(MainActivity.this,R.anim.translate);
                button.setAnimation(animation);
                TranslateAnimation translateAnimation=new TranslateAnimation(0,200,0,200);
                AlphaAnimation translateAnimation=new AlphaAnimation(0.5f,1f);
                translateAnimation.setDuration(3000);
                translateAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                translateAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                translateAnimation.setFillAfter(true);
                *//*

               *//*
                //渐变动画
                AlphaAnimation alphaAnimation=new AlphaAnimation(0.5f,1f);
                alphaAnimation.setDuration(3000);
                alphaAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                alphaAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                alphaAnimation.setFillAfter(true);
                button.startAnimation(alphaAnimation);*//*

               *//*
               * //旋转动画
               * public RotateAnimation(float fromDegrees, float toDegrees) {
               *
                RotateAnimation rotateAnimation=new RotateAnimation(0,90);
                rotateAnimation.setDuration(3000);
                rotateAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                rotateAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                rotateAnimation.setFillAfter(true);
                button.startAnimation(rotateAnimation);*//*

               *//*
               * 缩放动画
               *
               *
                ScaleAnimation scaleAnimation = new ScaleAnimation(0.5f, 0.7f, 0.5f, 0.7f);
                scaleAnimation.setDuration(3000);
                scaleAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                scaleAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                scaleAnimation.setFillAfter(true);
                button.startAnimation(scaleAnimation);
                AlphaAnimation alphaAnimation=new AlphaAnimation(0.5f,1f);
                alphaAnimation.setDuration(3000);
                alphaAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                alphaAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                alphaAnimation.setFillAfter(true);
                button.startAnimation(alphaAnimation);

                RotateAnimation rotateAnimation=new RotateAnimation(0,90);
                rotateAnimation.setDuration(3000);
                rotateAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                rotateAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                rotateAnimation.setFillAfter(true);
                button.startAnimation(rotateAnimation);

                ScaleAnimation scaleAnimation = new ScaleAnimation(0.5f, 0.7f, 0.5f, 0.7f);
                scaleAnimation.setDuration(3000);
                scaleAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                scaleAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                scaleAnimation.setFillAfter(true);
                button.startAnimation(scaleAnimation);

                //动画集合
                AnimationSet animationSet=new AnimationSet(true);
                animationSet.addAnimation(alphaAnimation);
                animationSet.addAnimation(rotateAnimation);
                animationSet.addAnimation(scaleAnimation);


                animationSet.setDuration(2000);
                animationSet.setRepeatMode(AnimationSet.INFINITE);
                animationSet.setRepeatCount(AnimationSet.INFINITE);

                CameryAnimation cameryAnimation=new CameryAnimation(10f,101f, CameryAnimation.Mode.Z);
                cameryAnimation.start();
                cameryAnimation.setDuration(3000);
                cameryAnimation.setRepeatMode(TranslateAnimation.INFINITE);
                cameryAnimation.setRepeatCount(TranslateAnimation.INFINITE);
                cameryAnimation.setFillAfter(true);
                button.setAnimation(cameryAnimation);
                Intent intent = new Intent(MainActivity.this, NextActivity.class);
                startActivity(intent);
                overridePendingTransition(R.anim.fade_in,R.anim.fade_out);*//*
            }
        });*/

    }

    public void buttontrans(View view) {
     /*   index += 100;
        view.setTranslationX(index);
        view.setTranslationY(index);
        Random random=new Random(1);
        view.setAlpha(random.nextFloat());*/
        ObjectAnimator objectAnimator = ObjectAnimator.ofFloat(view, "translationX", 0f, 300f);
        objectAnimator.setDuration(4000);
        objectAnimator.setRepeatCount(ObjectAnimator.INFINITE);
//        objectAnimator.start();


        ObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(view, "translationY", 0f, 300f);
        objectAnimator1.setDuration(7000);
        objectAnimator1.setRepeatCount(ObjectAnimator.INFINITE);
//        objectAnimator1.start();


        ObjectAnimator objectAnimator2 = ObjectAnimator.ofFloat(view, "scaleX", 0.2f, 1f);
        objectAnimator2.setDuration(6000);
        objectAnimator2.setRepeatCount(ObjectAnimator.INFINITE);
//        objectAnimator2.start();

        ObjectAnimator objectAnimator3 = ObjectAnimator.ofFloat(view, "scaleY", 0.2f, 1f);
        objectAnimator3.setDuration(6000);
        objectAnimator3.setRepeatCount(ObjectAnimator.INFINITE);
//        objectAnimator3.start();

        ObjectAnimator objectAnimator4 = ObjectAnimator.ofFloat(view, "alpha", 0.5f, 1f);
        objectAnimator4.setDuration(6000);
        objectAnimator4.setRepeatCount(ObjectAnimator.INFINITE);
//        objectAnimator4.start();

        AnimatorSet animatorSet = new AnimatorSet();
        /*// 步骤3：根据需求组合动画
         animSet.play(translation).with(rotate).before(alpha);  */
        animatorSet.play(objectAnimator1).with(objectAnimator2).with(objectAnimator3).with(objectAnimator4);
        animatorSet.setDuration(5000);
        animatorSet.start();

    }
}
